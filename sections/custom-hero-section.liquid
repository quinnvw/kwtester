<div class="hero-section {% if section.settings.swap_layout %}layout-swap{% endif %}">
  <div class="hero-content">
    <div class="subtitle">
      <svg class="camera-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M23 19C23 19.5304 22.7893 20.0391 22.4142 20.4142C22.0391 20.7893 21.5304 21 21 21H3C2.46957 21 1.96086 20.7893 1.58579 20.4142C1.21071 20.0391 1 19.5304 1 19V8C1 7.46957 1.21071 6.96086 1.58579 6.58579C1.96086 6.21071 2.46957 6 3 6H7L9 3H15L17 6H21C21.5304 6 22.0391 6.21071 22.4142 6.58579C22.7893 6.96086 23 7.46957 23 8V19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M12 17C14.2091 17 16 15.2091 16 13C16 10.7909 14.2091 9 12 9C9.79086 9 8 10.7909 8 13C8 15.2091 9.79086 17 12 17Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      <span>{{ section.settings.subtitle }}</span>
    </div>
    
    <div class="title-wrapper">
      <h1>{{ section.settings.title }}</h1>
      <span class="typing-text" id="typing-text"></span>
    </div>
    
    <p class="description">{{ section.settings.description_before }} <strong>{{ section.settings.bold_word }}</strong> {{ section.settings.description_after }}</p>
    <button class="button button-primary">Shop Now</button>
  </div>

  <div class="hero-video">
    <video 
      autoplay 
      loop 
      muted 
      playsinline
      src="{{ section.settings.video_url | default: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4' }}"
    ></video>
  </div>
</div>

{% stylesheet %}
.hero-section {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4rem 5%;
  gap: 2vw;
  flex-direction: row-reverse;
  max-width: 2000px;
  margin: 0 auto;
}

.hero-content {
  flex: 0 1 auto;
  display: flex;
  flex-direction: column;
  gap: clamp(1rem, 1.5vw, 1.5rem);
  max-width: clamp(400px, 40vw, 600px);
  width: clamp(300px, 40%, 600px);
}

.hero-video {
  flex: 0 0 55%;
  width: 55%;
  max-width: 800px;
  aspect-ratio: 16/9;
  border-radius: 24px;
  overflow: hidden;
}

.hero-video video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.subtitle {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: clamp(0.8rem, 1vw, 0.9rem);
  color: #666;
  margin-bottom: 0;
}

.camera-icon {
  width: 20px;
  height: 20px;
}

.title-wrapper {
  display: flex;
  flex-wrap: nowrap;
  align-items: flex-start;
  margin-bottom: 0;
}

.title-wrapper h1 {
  font-size: 3rem;
  margin: 0;
  white-space: nowrap;
  line-height: 1.1;
}

.typing-text {
  font-size: 3rem;
  color: #ff3b2e;
  min-width: 380px;
  width: 380px;
  display: inline-flex;
  align-items: flex-start;
  white-space: nowrap;
  position: relative;
  height: 3.2rem;
  line-height: 1.1;
  margin-left: 0.3em;
}

.txt {
  position: relative;
  display: inline-flex;
  align-items: flex-start;
  min-height: 1.1em;
  min-width: 0; /* Changed from 0.1em to 0 */
  line-height: inherit;
}

.txt::after {
  content: '|';
  position: absolute;
  left: 100%;
  margin-left: 0.1em;
  height: 1.1em;
  animation: blink 1.1s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  transform: translateY(-2%);
}

@keyframes blink {
  0%, 75% { opacity: 1; }
  76%, 100% { opacity: 0; }
}

.description {
  font-size: clamp(1rem, 1.2vw, 1.2rem);
  line-height: 1.6;
  color: #444;
  max-width: clamp(300px, 40vw, 500px);
  margin: 0;
}

@media (max-width: 1120px) {
  .hero-section {
    flex-direction: column;
    gap: 2rem;
  }

  .hero-content {
    width: 100%;
    max-width: 100%;
  }

  .hero-video {
    width: 100%;
    max-width: 100%;
  }

  .title-wrapper {
    flex-direction: column;
  }

  .typing-text {
    margin-left: 0;
  }
}
{% endstylesheet %}

<script>
  class TypeWriter {
  constructor(element, words, wait = 3000) {
    this.element = element;
    this.words = words;
    this.txt = '';
    this.wordIndex = 0;
    this.wait = parseInt(wait, 10);
    this.type();
    this.isDeleting = false;
    this.baseSpeed = 80; // Base typing speed
    this.deletingSpeedFactor = 0.7; // Slower deleting for smoother effect
  }
    
  type() {
    const current = this.wordIndex % this.words.length;
    const fullTxt = this.words[current];
    
    if(this.isDeleting) {
      this.txt = fullTxt.substring(0, this.txt.length - 1);
    } else {
      this.txt = fullTxt.substring(0, this.txt.length + 1);
    }
    
    this.element.innerHTML = `<span class="txt">${this.txt}</span>`;
    
    let typeSpeed = this.baseSpeed;
    
    // Smoothly vary the typing speed
    if(this.isDeleting) {
      typeSpeed = this.baseSpeed * this.deletingSpeedFactor;
    } else {
      // Slight variance in typing speed for natural feel
      typeSpeed = this.baseSpeed + (Math.random() * 20 - 10);
    }
    
    // Pause longer at the end of a word
    if(!this.isDeleting && this.txt === fullTxt) {
      typeSpeed = this.wait;
      this.isDeleting = true;
    } else if(this.isDeleting && this.txt === '') {
      this.isDeleting = false;
      this.wordIndex++;
      // Shorter pause before starting new word
      typeSpeed = 700;
    }
    
    setTimeout(() => this.type(), typeSpeed);
  }
}

// Initialize with longer wait time for better readability
document.addEventListener('DOMContentLoaded', () => {
  const txtElement = document.getElementById('typing-text');
  const words = ['videographers', 'editors', 'creators', 'filmmakers'];
  new TypeWriter(txtElement, words, 3500); // Increased wait time
});
</script>

{% schema %}
{
  "name": "Custom Hero Section",
  "settings": [
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "crafted for creators"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "made for"
    },
    {
      "type": "text",
      "id": "description_before",
      "label": "Description Before Bold",
      "default": "level up your edits with our"
    },
    {
      "type": "text",
      "id": "bold_word",
      "label": "Bold Word",
      "default": "industry"
    },
    {
      "type": "text",
      "id": "description_after",
      "label": "Description After Bold",
      "default": "tested tools and assets."
    },
    {
      "id": "video_url",
      "type": "url",
      "label": "Video URL"
    },
    {
      "id": "swap_layout",
      "type": "checkbox",
      "label": "Swap Layout (Video Left)",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Custom Hero Section",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}